{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/TaskForm.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","color","completed","item_color","react_default","a","createElement","ListGroup","Item","variant","as","className","onClick","id","text","Badge","bg","pill","TodoList","todos","numbered","map","key","NewTaskForm","onAdd","onDelete","label_ref","style","marginBottom","Stack","direction","gap","Form","Control","ref","placeholder","onKeyPress","event","Button","LOCAL_STORAGE_KEY","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","todoNameRef","useRef","completedTodos","filter","length","width","height","padding","maxWidth","textAligin","e","name","current","value","prevTodos","concat","toConsumableArray","uuidv4","newTodos","find","href","title","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6d397d74.chunk.js","sourcesContent":["import React from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  var color = todo.completed ? 'success' : 'primary'\r\n  var item_color = todo.completed ? 'success' : ''\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <ListGroup.Item variant={item_color} as='li' className=\"d-flex justify-content-between align-items-stretch\" onClick={handleTodoClick}>\r\n      <div className=\"ms-2 me-auto text-break\">{todo.text}</div>\r\n      <div className='ms-3 d-flex align-items-center'>\r\n        <Badge bg={color} pill>{todo.completed ? 'Done' : ''}</Badge>\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n    <ListGroup as=\"ol\" numbered>\r\n      {todos.map(todo => {\r\n        return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n      })}\r\n    </ListGroup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nexport default function NewTaskForm({ onAdd, onDelete, label_ref }) {\r\n  function handleSubmit(event) {\r\n    if (event.key === \"Enter\") onAdd()\r\n  }\r\n  \r\n  return (\r\n    <div style={{ marginBottom: '16px' }}>\r\n      <Stack direction=\"horizontal\" gap={3}>\r\n        <Form.Control ref={label_ref} className=\"me-auto\" placeholder=\"Add new task...\" onKeyPress={handleSubmit} />\r\n        <Button variant=\"primary\" onClick={onAdd}>Add</Button>\r\n        <Button variant=\"danger\" onClick={onDelete}>Clear</Button>\r\n      </Stack>\r\n    </div>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport NewTaskForm from './components/TaskForm';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.completed = !todo.completed\n    setTodos(newTodos)\n  }\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos])\n\n  const todoNameRef = useRef();\n  function addHandler(e) {\n    const name = todoNameRef.current.value\n    if (!name) return;\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), text: name, completed: false }]\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function clearHandler() {\n    const newTodos = todos.filter(todo => !todo.completed)\n    setTodos(newTodos);\n  }\n\n  var completedTodos = todos.filter(todo => !todo.completed).length\n  completedTodos = completedTodos ? completedTodos : 'no'\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100\" style={{ width: '100%', height: '100%' }}>\n      <div className='d-flex justify-content-center'>\n        <div style={{ padding: '16px', maxWidth: '450px' }}>\n          <h1 className='text-center' style={{ textAligin: 'center' }}>Simple Task List</h1>\n          <h6 className='text-center text-muted mb-3' style={{ textAligin: 'center' }}>\n            You have {completedTodos} tasks to do\n          </h6>\n          <NewTaskForm onAdd={addHandler} onDelete={clearHandler} label_ref={todoNameRef} />\n          <TodoList todos={todos} toggleTodo={toggleTodo} />\n        </div>\n      </div>\n\n      <footer className=\"mt-auto footer\">\n        <div className=\"container\" style={{ padding: '0px 16px 16px' }}>\n          <div className=\"muted text-center text-muted\">\n            Simple Task List • Created with ♡ by {' '}\n            <a href=\"https://github.com/CyberPotat42\" className=\"text-decoration-none\" title=\"Check out my GitHub!\">\n              Cyber Potato\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);"],"sourceRoot":""}